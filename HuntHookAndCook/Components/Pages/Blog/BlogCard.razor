@page "/blog/{Title}"
@using HuntHookAndCook.Data
@using HuntHookAndCook.Models.Blog
@using Microsoft.EntityFrameworkCore
@inject NavigationManager Navigation
@inject HuntHookAndCookDbContext DbContext

<MudCard Class="mx-auto my-4" Style="max-width: 600px;">
    <MudImage Src="@imageSrc" Alt="Blog Banner Image" Class="rounded-lg" ObjectFit="ObjectFit.Fill" Fluid="true" />
    <MudCardContent>
        <MudText Typo="Typo.h4">@blog.Title</MudText>
        <MudText Typo="Typo.subtitle1">@blog.ShortDescription</MudText>
        <MudDivider Class="my-2" />

        <MudGrid>
            <MudItem xs="12">
                <MudText Typo="Typo.h6">Content</MudText>
                <MudList T="BlogDefinition">
                    @if (blog.Paragraphs != null)
                    {
                        @foreach (var paragraph in blog.Paragraphs)
                        {
                            <MudListItem>
                                @if (!string.IsNullOrEmpty(paragraph.Subheading))
                                {
                                    <MudText Typo="Typo.subtitle2">@paragraph.Subheading</MudText>
                                }
                                <MudText Typo="Typo.body2">@paragraph.Body</MudText>
                            </MudListItem>
                        }
                    }
                </MudList>
            </MudItem>
        </MudGrid>

    </MudCardContent>
</MudCard>

@code {
    [Parameter]
    public string? Title { get; set; }

    private BlogDefinition blog = new BlogDefinition();
    private string? imageSrc;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(Title))
        {
            Navigation.NavigateTo("/blog");
            return;
        }

        blog = await DbContext.Blogs
            .Include(b => b.Paragraphs)
            .FirstOrDefaultAsync(b => b.Title == Title)
            ?? throw new InvalidOperationException("Blog not found");

        if (blog == null)
        {
            Navigation.NavigateTo("/blog/search");
            return;
        }

        imageSrc = blog.BannerImage != null
            ? $"data:image/png;base64,{Convert.ToBase64String(blog.BannerImage)}"
            : "Images/image-not-found.jpeg";
    }
}
